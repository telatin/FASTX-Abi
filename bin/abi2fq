#!/usr/bin/env perl
# PODNAME: - ab2fq.pl - A script to convert traces to FASTQ

use 5.012;
use warnings;
use FindBin qw($RealBin);
use lib "$RealBin/../lib";
use FASTX::Abi;
use File::Basename;
use Data::Dumper;
use Getopt::Long;

my $force_single = 0;
my $opt_verbose = 0;
my $opt_quality	= undef;
my $opt_min_quality = 40;
my $help;
GetOptions(
	'force' => \$force_single,
	'verbose' => \$opt_verbose,
	'q|min-qual=f' => \$opt_min_quality,
	'opt-quality=f' => \$opt_quality,
    'help' =>  \$help,
);

help() if $help;

unless (defined $ARGV[0]) {
  die "Usage: ", basename($0),
   " [FixedQuality] FILE1.ab1 FILE2.ab1 .. > reads.fq\n\n";
}


foreach my $file (@ARGV) {
	if (! -e "$file") {
		say STDERR " * Skipping '$file': not found";
		next;
	}
	my $trace = FASTX::Abi->new({ 
		filename => $file,
		trim_ends => 1,
		min_qual => $opt_min_quality,

	});

    if ( $force_single) {
        print '@', $trace->{sequence_name}, "\n", $trace->{seq1}, "\n+\n", $trace->{quality}, "\n";
    } else {
        print $trace->get_fastq(undef, $opt_quality);
    }
 	
    
	say Dumper $trace if ($opt_verbose);
}

sub help {
    say STDERR<<HELP;
  Convert traces to FASTQ.

  abi2fq [options] <abi_file>...
  
    -q, --min-qual QUAL
        Minimum quality score to output.
        Default: 40
    --opt-quality QUAL
        Force a fixed quality in the FASTQ
        output 
    --force       
        Print a single sequence per chromatogram
        even if ambiguous bases are present
    --verbose
        Print extra information
HELP
    exit()
}